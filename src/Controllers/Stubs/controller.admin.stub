<?php

namespace DummyNamespace;

use DaydreamLab\JJAJ\Controllers\BaseController;
use DummyPathService\Services\DummyType\Admin\DummyService;
use DummyPathRequest\Requests\DummyType\Admin\DummyRemovePostRequest;
use DummyPathRequest\Requests\DummyType\Admin\DummyStorePostRequest;
use DummyPathRequest\Requests\DummyType\Admin\DummyStatePostRequest;
use DummyPathRequest\Requests\DummyType\Admin\DummySearchPostRequest;
use DummyPathRequest\Requests\DummyType\Admin\DummyOrderingPostRequest;
use DummyPathRequest\Requests\DummyType\Admin\DummyCheckoutPostRequest;

class DummyClass extends BaseController
{
    protected $modelName = '{modelName}';

    protected $modelType = '{modelType}';

    public function __construct(DummyService $service)
    {
        parent::__construct($service);
        $this->service = $service;
    }


    public function checkout(DummyCheckoutPostRequest $request)
    {
        $this->service->checkout($request->validated());

        return $this->response($this->service->status, $this->service->response);
    }


    public function getItem($request)
    {
        $this->service->getItem(collect(['id' => $request->route('id')]));

        return $this->response($this->service->status, $this->service->response);
    }


    public function ordering(DummyOrderingPostRequest $request)
    {
        $this->service->ordering($request->validated());

        return $this->response($this->service->status, $this->service->response);
    }


    public function remove(DummyRemovePostRequest $request)
    {
        $this->service->remove($request->validated());

        return $this->response($this->service->status, $this->service->response);
    }


    public function state(DummyStatePostRequest $request)
    {
        $this->service->state($request->validated());

        return $this->response($this->service->status, $this->service->response);
    }


    public function store(DummyStorePostRequest $request)
    {
        $this->service->store($request->validated());

        return $this->response($this->service->status, $this->service->response);
    }


    public function search(DummySearchPostRequest $request)
    {
        $this->service->search($request->validated());

        return $this->response($this->service->status, $this->service->response);
    }
}
